# Comments
snippet /**
	/**
	 * ${1:@overview}
	 * @param {${2:String/Number/RegExp/Date/Function/Array/Object}} ${3}
	 * @return {${4:String/Number/RegExp/Date/Function/Array/Object}} ${5}
	 */${6}
snippet @param
	@param {${1:String/Number/RegExp/Date/Function/Array/Object}} ${2}
snippet @author
	@author ${1:`g:snips_author`}
snippet @version
	@version ${1:1.0}, ${2:`strftime("%Y/%m/%d")`}
# Prototype
snippet proto
	${1:class_name}.prototype.${2:method_name} = function(${3:first_argument}){
		${4:// body...}
	};
# Function
snippet fun
	function ${1:function_name}(${2:args}){
		${3:// body...}
	}
# Anonymous Function
snippet f
	function(${1:args}){${2:/* code */}}${3}
# if
snippet if
	if(${1:true}){${2}}
# if ... else
snippet ife
	if(${1:true}){${2}}
	else{${3}}
# tertiary conditional
snippet t
	${1:/* condition */} ? ${2:a} : ${3:b}
# switch
snippet switch
	switch(${1:expression}){
	case '${3:case}':
		${4:// code}
		break;${5}
	default:
		${2:// code}
	}
# case
snippet case
	case '${1:case}':
		${2:// code}
		break;${3}
# for (...) {...}
snippet for
	for(var ${1:i}=0,${2:l}=${3:Things}.length; $1<$2; $1${4:++}){
		${5:$3[$1]}
	}${6}
#snippet for
#	for(var ${2:i}=0; $2<${1:Things}.length; $2${3:++}){
#		${4:$1[$2]}
#	}
# for (...) {...} (Improved Native For-Loop)
snippet forr
	for(var ${2:i}=${1:Things}.length-1; $2>=0; $2${3:--}){
		${4:$1[$2]}
	}
snippet forin
	for(var ${1:k} in ${2:obj}){
	    ${3:$2}[$1]${4}
	}${5}
# while (...) {...}
snippet wh
	while(${1:/* condition */}){
		${2:/* code */}
	}
# do...while
snippet do
	do{
		${2:/* code */}
	}while(${1:/* condition */});
# try{...}catch(e){...}
snippet try
	try{
		${1:// code}
	}catch(${2:ex}){${3}}${4}
# Object Method
snippet :f
	${1:method_name}:function(${2:attribute}){
		${4}
	}${3:,}
# setTimeout function
snippet timeout
	setTimeout(function(){${3}}${2}, ${1:25})${3};
snippet interval
	setInterval(${1:function}, ${2:25});${3}
# Get Element
snippet get
	document.getElementBy${1:Id}('${2}')${3}
# Get Elements
snippet gets
	document.getElementsBy${1:TagName}('${2}')${3}
snippet write
	document.write(${1:"text"})${2}
